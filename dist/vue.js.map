{"version":3,"file":"vue.js","sources":["../src/compiler/parser.js","../src/compiler/index.js","../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 标签开头的正则， 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配标签结尾的\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/ // 属性匹配\r\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配标签结束的\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nexport function parserHTML(html) {\r\n  // 可以不停的截取模板 ， 直到把模板全部解析完毕\r\n  // 构建父子关系\r\n  let stack = []\r\n  let root = null\r\n  function createASTElement(tag, attrs, parent = null) {\r\n    return {\r\n      tag,\r\n      type: 1, // 元素\r\n      children: [],\r\n      parent,\r\n      attrs\r\n    }\r\n  }\r\n  function start(tag, attrs) {\r\n    // 遇到开始标签就取栈中的最后一个作为父节点\r\n    let parent = stack[stack.length - 1]\r\n    let element = createASTElement(tag, attrs, parent)\r\n    if (root == null) {\r\n      // 说明当前节点就是根节点\r\n      root = element\r\n    }\r\n    if (parent) {\r\n      element.parent = parent // 更新p的parent属性，指向parent\r\n      parent.children.push(element)\r\n    }\r\n    stack.push(element)\r\n  }\r\n  function end(tagName) {\r\n    let endTag = stack.pop()\r\n    if (endTag.tag != tagName) {\r\n      console.log('标签出错')\r\n    }\r\n  }\r\n  function text(chars) {\r\n    let parent = stack[stack.length - 1]\r\n    chars = chars.replace(/\\s/g, '')\r\n    if (chars) {\r\n      parent.children.push({\r\n        type: 2,\r\n        text: chars\r\n      })\r\n    }\r\n  }\r\n  function advance(len) {\r\n    html = html.substring(len)\r\n  }\r\n  function parserStartTag() {\r\n    const start = html.match(startTagOpen)\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []\r\n      }\r\n      advance(start[0].length)\r\n      let end\r\n      let attr\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        // 1.要有属性，不能为开始的结束标签\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n        advance(attr[0].length)\r\n      }\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      return match\r\n    }\r\n    return false\r\n  }\r\n  while (html) {\r\n    // 解析标签和文本\r\n    let index = html.indexOf('<')\r\n    if (index == 0) {\r\n      // 解析开始标签， 并且把属性也解析出来\r\n      const startTagMatch = parserStartTag()\r\n      if (startTagMatch) {\r\n        // 开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n      let endTagMatch\r\n      if ((endTagMatch = html.match(endTag))) {\r\n        // 结束标签\r\n        end(endTagMatch[1])\r\n        advance(endTagMatch[0].length)\r\n        continue\r\n      }\r\n      break\r\n    }\r\n    // 文本\r\n    if (index > 0) {\r\n      let chars = html.substring(0, index)\r\n      text(chars)\r\n      advance(chars.length)\r\n    }\r\n  }\r\n  return root\r\n}\r\n","import { parserHTML } from './parser'\r\n\r\nexport function compileToFunction(template) {\r\n  // 1.将模板变成ast语法树\r\n  let ast = parserHTML(template)\r\n  // console.log(ast)\r\n  // 代码优化 标记静态节点\r\n\r\n  // 代码生成\r\n\r\n  // 1. 编译原理\r\n  // 2.响应式原理 依赖搜集\r\n  // 3.组件化开发（贯穿了vue的流程）\r\n  // 4.diff算法\r\n}\r\n","export function isFunction(val) {\r\n  return typeof val == 'function'\r\n}\r\n\r\nexport function isObject(val) {\r\n  return typeof val == 'object' && val !== null\r\n}\r\n\r\nexport let isArray = Array.isArray\r\n","let oldArrayPrototype = Array.prototype // 获取老的数组的原型方法\r\n\r\nexport let arrayMethods = Object.create(oldArrayPrototype) // 让arrayMethods 通过__proto__能获取到数组的方法\r\n\r\nlet methods = ['push', 'shift', 'pop', 'unshift', 'reverse', 'sort', 'splice']\r\n\r\nmethods.forEach((method) => {\r\n  arrayMethods[method] = function (...args) {\r\n    // 数组的方法进行重写\r\n    // console.log('数组的方法进行重写')\r\n    // 数组新增的属性，要看一下是不是对象，如果是对象，继续进行劫持\r\n\r\n    // 需要调用数组原生逻辑\r\n    oldArrayPrototype[method].call(this, ...args)\r\n    // 可以添加自己逻辑，函数劫持，切片\r\n    let inserted = []\r\n    let ob = this.__ob__\r\n    switch (method) {\r\n      case 'splice': // 修改 删除 添加\r\n        inserted = args.slice(2) // splice 方法从第三个参数起，是增添的新数据\r\n        break\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break\r\n    }\r\n    // inserted[] 遍历数组 看一下他是否需要进行二次劫持\r\n    if (inserted) {\r\n      ob.observeArray(inserted)\r\n    }\r\n  }\r\n})\r\n\r\n// 属性的查找: 是先找自己身上的,找不到去原型上查找\r\n// arrayMethods.push()\r\n// arrayMethods.shift()\r\n// arrayMethods.pop()\r\n// arrayMethods.unshift()\r\n// arrayMethods.reverse()\r\n// arrayMethods.sort()\r\n// arrayMethods.splice()\r\n","import { isArray, isObject } from '../utils'\r\nimport { arrayMethods } from './array'\r\n// 1.每个对象都有一个__proto__ 属性, 它指向所属类的原型本身\r\n// 2. 每个原型上都有一个constructor 属性,指向函数本身\r\nclass Observer {\r\n  constructor(value) {\r\n    // 不让__ob__ 被遍历到\r\n    // value.__ob__ = this // 给对象和数组添加一个自定义属性\r\n\r\n    Object.defineProperty(value, '__ob__', {\r\n      value: this,\r\n      enumerable: false //表示这个属性不能被列举出来，不能被循环到\r\n    })\r\n\r\n    if (isArray(value)) {\r\n      // 更改数组原型方法, 如果是数组,就重写数组的原型链\r\n      value.__proto__ = arrayMethods // 重写数组方法\r\n      this.observeArray(value)\r\n    } else {\r\n      this.walk(value) // 核心就是循环对象\r\n    }\r\n  }\r\n  observeArray(data) {\r\n    // 递归遍历数组,对数组内部的对象再次重写[[]] [{}]\r\n    data.forEach((item) => {\r\n      // 数组里如果是引用类型,那么是响应式\r\n      observe(item)\r\n    })\r\n  }\r\n  walk(data) {\r\n    Object.keys(data).forEach((key) => {\r\n      // 使用defineProperty重新定义\r\n      defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n}\r\n// vue2应用了defineProperty 需要一加载的时候就进行递归操作,如果层次过深也会浪费性能\r\n// 1.性能优化的原则\r\n// 1) 不要把所有的数据都放在data中,因为所有的数据都会增加get和set\r\n// 2)不要写数据的时候层次过深, 尽量扁平化\r\n// 3) 不要频繁获取数据\r\n// 4)如果数据不需要响应式,可以使用Object.freeze 冻结属性\r\n\r\nfunction defineReactive(obj, key, value) {\r\n  observe(value) // 递归进行观测数据. 不管有多少层,我都进行defineProperty\r\n  // vue2 慢的原因 主要在这个方法中\r\n  Object.defineProperty(obj, key, {\r\n    get() {\r\n      return value // 闭包, 此value 会像上层的value进行查找\r\n    },\r\n    set(newValue) {\r\n      // 如果设置的是一个对象,那么会再次进行劫持\r\n      if (newValue === value) return\r\n      observe(newValue)\r\n      console.log('修改')\r\n      value = newValue\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(value) {\r\n  // 1.如果value不是对象就不用观测了,说明写的有问题\r\n  if (!isObject(value)) return\r\n\r\n  if (value.__ob__) return // 一个对象不需要重新被观测\r\n\r\n  // 2.需要对 对象进行观测, 最外层必须是一个{}, 不能是数组\r\n  // 如果一个数据已经被观测过了, 就不要在进行观测了, 用类来实现, 观测过就增加一个标识,再观测的时候,可以先检测是否观测过,观测过了就跳过检测\r\n  return new Observer(value)\r\n}\r\n","import { observe } from './observe/index'\r\nimport { isFunction } from './utils'\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, key, source) {\r\n  // 取值的时候做代理, 不是暴力的把_data 属性赋值给vm, 而且直接赋值会有命名冲突问题\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key]\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  // 如果用户传递的是一个函数,则取函数的返回值作为对象, 如果就是对象就直接使用那个对象\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data //_data已经是响应值了\r\n  // 需要将data 变成响应式的,Object.defineProperty, 重写data中的所有属性\r\n  observe(data)\r\n\r\n  for (let key in data) {\r\n    // vm.msg => vm._data.msg\r\n    proxy(vm, key, '_data')\r\n  }\r\n}\r\n","import { compileToFunction } from './compiler/index'\r\nimport { initState } from './state'\r\n\r\nexport function initMixin(Vue) {\r\n  // 后续组件化开发的时候，Vue.extend 可以创造子组件， 子组件可以继承Vue，子组件也可以调用_init 方法\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this\r\n    // 把用户的选项放vm上， 这样在其他方法中都可以获取到options\r\n    vm.$options = options\r\n\r\n    //$options选项\r\n    // options 中是用户传入的数据 el， data\r\n    initState(vm)\r\n    if (vm.$options.el) {\r\n      // 要将数据挂载到页面上\r\n      // 现在数据已经被劫持了，数据变化需要更新视图，diff算法更新需要更新的部分\r\n      // vue => template (写起来更符合直觉) => jsx(灵活)\r\n      // vue3 template 写起来性能会更高一些， 内部做了跟多优化\r\n      // template -> ast 语法树(用来描述语法的，描述语法本身的) => 描述成一个树结构 => 将代码重组成js语法\r\n      // 模板编译原理(把template 模板编译成 render函数 => 虚拟dom => diff算法比对虚拟dom)\r\n      // ast => render返回 => vnode => 生成真是dom\r\n      //        更新的时候调用render => 新的vnode => 新旧对比 => 更新真实dom\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    const opts = vm.$options\r\n    el = document.querySelector(el) // 获取真实元素\r\n    vm.$el = el // 页面真实元素\r\n\r\n    if (!opts.render) {\r\n      // 模板编译\r\n      let template = opts.template\r\n      if (!template) {\r\n        template = el.outerHTML\r\n      }\r\n      let render = compileToFunction(el.outerHTML)\r\n      opts.render = render\r\n    }\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\n// vue 要如何实现， 原型模式， 所有的功能都能通过原型扩展的方式来添加\r\nfunction Vue(options) {\r\n  // 实现vue的初始化\r\n  this._init(options)\r\n}\r\ninitMixin(Vue)\r\n\r\nexport default Vue\r\n\r\n// 1.new Vue 会调用_init方法进行初始化\r\n// 2.会将用户的选项放到vm.$options 上\r\n// 3.会对当前属性上搜索有没有data数据\r\n// 4.有data判断data是不是一个函数,如果是函数返回值 initData\r\n// 5.observe 去观测data中的数据\r\n// 6.vm上像取值也能取到data中的数据, vm._data = data 这样用户能取到data\r\n// 7.用户觉得有点麻烦 vm.xxx => vm._data\r\n\r\n// 8.如果更新对象不存在的属性,会导致视图不更新, 如果是数组更新索引和长度不会触发更新\r\n// 9.如果替换成一个新对象,新对象会被进行劫持,如果是数组通过方法改变,也会被劫持\r\n// 通过__ob__进行标识这个对象被监控过, (在vue中被监控对象身上都有一个__ob__ 这个属性)\r\n// 10.如果你就像改索引，可以使用$set 方法，内部就是splice()\r\n\r\n// 如果有el 需要挂载到页面上\r\n"],"names":[],"mappings":"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"}