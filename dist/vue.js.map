{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/utils.js","../src/global-api/index.js","../src/observe/dep.js","../src/observe/scheduler.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/render.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nfunction genProps(attrs) {\r\n  //[key: value , key:value]\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if (attr.name === 'style') {\r\n      let styles = {}\r\n      attr.value.replace(/([^;:]+):([^;:]+)/g, function () {\r\n        styles[arguments[1]] = arguments[2]\r\n      })\r\n      attr.value = styles\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nfunction gen(el) {\r\n  if (el.type == 1) {\r\n    return generate(el) // 如果是元素就递归生成\r\n  } else {\r\n    let text = el.text\r\n    if (!defaultTagRE.test(text)) return `_v('${text}')` // 说明就是普通文本\r\n    // 说明有表达式， 需要做一个表达式和普通值的拼接_v['aaa',_s(msg),'bbbb'].join('+')\r\n    // _v('aaa' + _s(msg)+'bbb')\r\n    let lastIndex = (defaultTagRE.lastIndex = 0)\r\n    let tokens = []\r\n    let match\r\n    while ((match = defaultTagRE.exec(text))) {\r\n      // 如果正则 + g 配合exec 就会有一个lastIndex 的问题\r\n      let index = match.index\r\n      if (index > lastIndex) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n      }\r\n      tokens.push(`_s(${match[1].trim()})`)\r\n      lastIndex = index + match[0].length\r\n    }\r\n    if (lastIndex < text.length) {\r\n      tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n    }\r\n    return `_v(${tokens.join('+')})`\r\n  }\r\n}\r\n\r\nfunction genChildren(el) {\r\n  let children = el.children\r\n  if (children) {\r\n    return children.map((item) => gen(item)).join(',')\r\n  }\r\n  return false\r\n}\r\nexport function generate(ast) {\r\n  let children = genChildren(ast)\r\n  let code = `_c('${ast.tag}', ${ast.attrs.length ? genProps(ast.attrs) : 'undefined'}${\r\n    children ? `,${children}` : ''\r\n  })`\r\n  return code\r\n}\r\n","const ncname = `[a-zA-z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 标签开头的正则， 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配标签结尾的\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/ // 属性匹配\r\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配标签结束的\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nexport function parserHTML(html) {\r\n  // 可以不停的截取模板 ， 直到把模板全部解析完毕\r\n  // 构建父子关系\r\n  let stack = []\r\n  let root = null\r\n  function createASTElement(tag, attrs, parent = null) {\r\n    return {\r\n      tag,\r\n      type: 1, // 元素\r\n      children: [],\r\n      parent,\r\n      attrs\r\n    }\r\n  }\r\n  function start(tag, attrs) {\r\n    // 遇到开始标签就取栈中的最后一个作为父节点\r\n    let parent = stack[stack.length - 1]\r\n    let element = createASTElement(tag, attrs, parent)\r\n    if (root == null) {\r\n      // 说明当前节点就是根节点\r\n      root = element\r\n    }\r\n    if (parent) {\r\n      element.parent = parent // 更新p的parent属性，指向parent\r\n      parent.children.push(element)\r\n    }\r\n    stack.push(element)\r\n  }\r\n  function end(tagName) {\r\n    let endTag = stack.pop()\r\n    if (endTag.tag != tagName) {\r\n      console.log('标签出错')\r\n    }\r\n  }\r\n  function text(chars) {\r\n    let parent = stack[stack.length - 1]\r\n    chars = chars.replace(/\\s/g, '')\r\n    if (chars) {\r\n      parent.children.push({\r\n        type: 2,\r\n        text: chars\r\n      })\r\n    }\r\n  }\r\n  function advance(len) {\r\n    html = html.substring(len)\r\n  }\r\n  function parserStartTag() {\r\n    const start = html.match(startTagOpen)\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []\r\n      }\r\n      advance(start[0].length)\r\n      let end\r\n      let attr\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        // 1.要有属性，不能为开始的结束标签\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n        advance(attr[0].length)\r\n      }\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      return match\r\n    }\r\n    return false\r\n  }\r\n  while (html) {\r\n    // 解析标签和文本\r\n    let index = html.indexOf('<')\r\n    if (index == 0) {\r\n      // 解析开始标签， 并且把属性也解析出来\r\n      const startTagMatch = parserStartTag()\r\n      if (startTagMatch) {\r\n        // 开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n      let endTagMatch\r\n      if ((endTagMatch = html.match(endTag))) {\r\n        // 结束标签\r\n        end(endTagMatch[1])\r\n        advance(endTagMatch[0].length)\r\n        continue\r\n      }\r\n      break\r\n    }\r\n    // 文本\r\n    if (index > 0) {\r\n      let chars = html.substring(0, index)\r\n      text(chars)\r\n      advance(chars.length)\r\n    }\r\n  }\r\n  return root\r\n}\r\n","import { generate } from './generate'\r\nimport { parserHTML } from './parser'\r\n\r\nexport function compileToFunction(template) {\r\n  // 1.将模板变成ast语法树\r\n  let ast = parserHTML(template)\r\n  // console.log(ast)\r\n  // 代码优化 标记静态节点\r\n\r\n  // 代码生成\r\n  let code = generate(ast)\r\n  let render = new Function(`with(this){return ${code}}`)\r\n  return render\r\n  // 1. 编译原理\r\n  // 2.响应式原理 依赖搜集\r\n  // 3.组件化开发（贯穿了vue的流程）\r\n  // 4.diff算法\r\n}\r\n","export function isFunction(val) {\r\n  return typeof val == 'function'\r\n}\r\n\r\nexport function isObject(val) {\r\n  return typeof val == 'object' && val !== null\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\nfunction flushCallbacks() {\r\n  callbacks.forEach((fn) => fn())\r\n  callbacks = []\r\n  waiting = false\r\n}\r\nexport function nextTick(fn) {\r\n  // vue3里面的nextTick 就是promise , vue2里面做了一些兼容性处理\r\n  // return Promise.resolve().then(fn)\r\n  callbacks.push(fn)\r\n  if (!waiting) {\r\n    Promise.resolve().then(flushCallbacks)\r\n    waiting = true\r\n  }\r\n}\r\n\r\nexport let isArray = Array.isArray\r\n\r\n// {} {beforeCreate: fn} => {beforeCreate: [fn]}\r\n// {beforeCreate: [fn]} {beforeCreate: fn} => {beforeCreate: [fn, fn]}\r\n\r\nlet strats = {} // 存放所有策略\r\nlet lifeCycle = ['beforeCreate', 'created', 'beforeMount', 'mounted']\r\nlifeCycle.forEach((hook) => {\r\n  strats[hook] = function (parentVal, childVal) {\r\n    if (childVal) {\r\n      if (parentVal) {\r\n        // 父子都有值 ，用父和子拼接在一起 ， 父有值就一直是数组\r\n        return parentVal.concat(childVal)\r\n      } else {\r\n        // 儿子有值，父没有值\r\n        if (isArray(childVal)) {\r\n          return childVal\r\n        } else {\r\n          return [childVal] // 如果没值就变成数组\r\n        }\r\n      }\r\n    } else {\r\n      return parentVal\r\n    }\r\n  }\r\n})\r\n\r\nstrats.components = function (parentVal, childVal) {\r\n  let res = Object.create(parentVal)\r\n\r\n  if (childVal) {\r\n    // 合并后产生新对象，不用原来的\r\n    for (let key in childVal) {\r\n      res[key] = childVal[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nexport function mergeOptions(parentVal, childVal) {\r\n  const options = {}\r\n  for (const key in parentVal) {\r\n    mergeFiled(key)\r\n  }\r\n  for (const key in childVal) {\r\n    if (!parentVal.hasOwnProperty(key)) {\r\n      mergeFiled(key)\r\n    }\r\n  }\r\n  function mergeFiled(key) {\r\n    // 设计模式   策略模式\r\n    let strat = strats[key]\r\n    if (strat) {\r\n      options[key] = strat(parentVal[key], childVal[key]) // 合并两个值\r\n    } else {\r\n      options[key] = childVal[key] || parentVal[key]\r\n    }\r\n  }\r\n  return options\r\n}\r\n\r\nfunction makeMap(str) {\r\n  let tagList = str.split(',')\r\n  return function (tagName) {\r\n    return tagList.includes(tagName)\r\n  }\r\n}\r\n\r\nexport const isReservedTag = makeMap(\r\n  'template,script,style,element,content,slot,link,meta,svg,view,button,' +\r\n    'a,div,img,image,text,span,input,switch,textarea,spinner,select,' +\r\n    'slider,slider-neighbor,indicator,canvas,' +\r\n    'list,cell,header,loading,loading-indicator,refresh,scrollable,scroller,' +\r\n    'video,web,embed,tabbar,tabheader,datepicker,timepicker,marquee,countdown'\r\n)\r\n","import { isObject, mergeOptions } from '../utils'\r\n\r\nexport function initGlobalApi(Vue) {\r\n  Vue.options = {} // 全局属性，在每个组件初始化的时候，将这些属性放到每个组件上\r\n  Vue.mixin = function (options) {\r\n    this.options = mergeOptions(this.options, options)\r\n    return this\r\n  }\r\n  Vue.options._base = Vue\r\n  // 通过Vue.extend 方法可以产生一个子类，new子类的时候会执行代码初始化流程（组件的初始化）\r\n  Vue.extend = function (opt) {\r\n    // 会产生一个子类\r\n    const Super = this\r\n    const Sub = function (options) {\r\n      // 创造一个组件，就是new这个组件的类（组件初始化）\r\n      this._init(options)\r\n    }\r\n    Sub.prototype = Object.create(Super.prototype) // 继承原型方法\r\n    Sub.prototype.constructor = Sub // Object.create 会产生一个新的实例作为子类的原型，此时constructor会指向错误\r\n    Sub.options = mergeOptions(Super.options, opt)\r\n    // Sub.mixin = Vue.mixin\r\n    // ....\r\n    return Sub\r\n  }\r\n  Vue.options.components = {}\r\n  Vue.component = function (id, definition) {\r\n    // definition可以传入对象或函数\r\n    let name = definition.name || id\r\n    definition.name = name\r\n    if (isObject(definition)) {\r\n      definition = Vue.extend(definition)\r\n    }\r\n    Vue.options.components[name] = definition\r\n  }\r\n}\r\n","let id = 0\r\n// dep.subs = [watcher]\r\n// watcher.deps = [dep]\r\nclass Dep {\r\n  constructor() {\r\n    // 把watcher 放到dep\r\n    this.subs = []\r\n    this.id = id++\r\n  }\r\n  depend() {\r\n    // 要给watcher 也加一个标识，防止重复\r\n    // 让dep记住这个watcher watcher还要记住dep 相互关系\r\n    Dep.target.addDep(this) // 在watcher中在调用addSub方法\r\n  }\r\n  addSub(watcher) {\r\n    this.subs.push(watcher)\r\n  }\r\n  notify() {\r\n    this.subs.forEach((watcher) => watcher.updata())\r\n  }\r\n}\r\nDep.target = null // 这里是一个全局的变量 window.target 静态属性\r\n\r\nexport default Dep\r\n","import { nextTick } from '../utils'\r\n\r\nlet queue = [] // 这个存放要更新的watcher\r\nlet has = {}\r\n\r\nfunction flushSchedulerQueue() {\r\n  queue.forEach((watcher) => watcher.run())\r\n  queue = []\r\n  has = {}\r\n  pending = false\r\n}\r\n\r\nlet pending = false\r\nexport function queueWatcher(watcher) {\r\n  // 一般情况下，写去重，可以采用这种方式，如果你使用set的时候\r\n  let id = watcher.id\r\n  if (has[id] == null) {\r\n    has[id] = true\r\n    queue.push(watcher)\r\n    if (!pending) {\r\n      // 防抖 多次执行， 只走1次\r\n      // setTimeout(() => {\r\n      //   queue.forEach((watcher) => watcher.run())\r\n      //   queue = []\r\n      //   has = {}\r\n      //   pending = false\r\n      // }, 0)\r\n      nextTick(flushSchedulerQueue)\r\n      pending = true\r\n    }\r\n  }\r\n}\r\n","import Dep from './dep'\r\nimport { queueWatcher } from './scheduler'\r\nlet id = 0\r\nclass Watcher {\r\n  constructor(vm, fn, cb, options) {\r\n    this.vm = vm\r\n    this.fn = fn\r\n    this.cb = cb\r\n    this.options = options\r\n    this.id = id++\r\n    this.depsId = new Set()\r\n    this.deps = []\r\n\r\n    this.getter = fn // fn就是页面渲染逻辑\r\n    this.get() // 表示上来后就做一次初始化\r\n  }\r\n  addDep(dep) {\r\n    let did = dep.id\r\n    if (!this.depsId.has(did)) {\r\n      this.depsId.add(did)\r\n      this.deps.push(dep)\r\n      dep.addSub(this)\r\n    }\r\n  }\r\n  get() {\r\n    // debugger\r\n    Dep.target = this // window.target = watcher\r\n    this.getter() // 页面渲染逻辑\r\n    Dep.target = null // 渲染完毕后，就将标识清空了，只有在渲染的时候才会进行依赖收集\r\n  }\r\n  updata() {\r\n    // 每次更新数据都会同步调用这个updata方法，可以将更新的逻辑缓存起来，等会同步更新数据的逻辑执行完毕后，依次调用（去重逻辑）\r\n    console.log('缓存更新')\r\n    queueWatcher(this)\r\n    // 可以做异步更新\r\n    // this.get() vue.nextTick\r\n  }\r\n  run() {\r\n    console.log('真正更新')\r\n    this.get() // render() 取最新的vm上的数据\r\n  }\r\n}\r\n\r\nexport default Watcher\r\n","import { isObject, isReservedTag } from '../utils'\r\n\r\nfunction createComponent(vm, tag, data, children, key, Ctor) {\r\n  if (isObject(Ctor)) {\r\n    //组件的定义一定是通过Vue.extend 进行包裹的\r\n    Ctor = vm.$options._base.extend(Ctor)\r\n  }\r\n\r\n  data.hook = {\r\n    // 组件的生命周期\r\n    init(vnode) {\r\n      // vnode.componentInstance.$el -> 对应组件渲染后的结果\r\n      let child = (vnode.componentInstance = new Ctor({})) // 获取组件的真实dom\r\n      child.$mount()\r\n      // mount 挂载完毕后，会产生一个真实节点，这个节点在vm.$el 上 => 对应的就是组件的真实内容\r\n    }\r\n  }\r\n  let componentVnode = vnode(vm, tag, data, undefined, key, undefined, { Ctor, children, tag }) // componentOptions 存放了一个重要的属性\r\n  return componentVnode\r\n}\r\n\r\n// 返回虚拟节点\r\nexport function createElement(vm, tag, data = {}, ...children) {\r\n  // 如何区分是组件还是元素节点？\r\n  if (!isReservedTag(tag)) {\r\n    let Ctor = vm.$options.components[tag]\r\n    return createComponent(vm, tag, data, children, data.key, Ctor)\r\n  }\r\n\r\n  return vnode(vm, tag, data, children, data.key, undefined)\r\n}\r\n\r\nexport function createText(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n// 看两个节点是不是相同节点，就看是不是tag和key是不是一样\r\n// vue2就有一个性能问题，递归比对\r\nexport function isSameVnode(newVnode, oldVnode) {\r\n  return newVnode.tag == oldVnode.tag && newVnode.key == oldVnode.key\r\n}\r\n\r\nfunction vnode(vm, tag, data, children, key, text, options) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    children,\r\n    data,\r\n    key,\r\n    text,\r\n    componentOptions: options\r\n  }\r\n}\r\n","import { isSameVnode } from '../vdom/index'\r\n\r\nexport function patch(oldVnode, vnode) {\r\n  if (!oldVnode) {\r\n    // 组件的挂载流程\r\n    return createElm(vnode) // 产生组件的真实节点\r\n  }\r\n\r\n  const isRealElement = oldVnode.nodeType\r\n\r\n  if (isRealElement) {\r\n    const elm = createElm(vnode) // 根据虚拟节点创造了真实节点\r\n    const parentNode = oldVnode.parentNode\r\n    parentNode.insertBefore(elm, oldVnode.nextSibling)\r\n    parentNode.removeChild(oldVnode)\r\n    return elm\r\n  } else {\r\n    // 不管想怎么diff 最终想更新渲染 => dom操作里去\r\n    // diff算法\r\n    // 只比较同级，如果不一样，儿子就不用比对了,根据当前节点，创建节点，全部替换掉\r\n    if (!isSameVnode(vnode, oldVnode)) {\r\n      // 如果新旧节点不是同一个，删除老的换成新的\r\n      return oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el)\r\n    }\r\n    let el = (vnode.el = oldVnode.el) // 复用节点\r\n    if (!oldVnode.tag) {\r\n      // 文本,另一个一定也是个文本\r\n      if (oldVnode.text !== vnode.text) {\r\n        return (el.textContent = vnode.text)\r\n      }\r\n    }\r\n    // 元素 新的虚拟节点\r\n    updataProperties(vnode, oldVnode.data)\r\n    // 相同节点，复用节点，再更新不一样的内容（属性）\r\n    // 比较儿子节点\r\n    let oldChildren = oldVnode.children || []\r\n    let newChildren = vnode.children || []\r\n    // 情况1： 老的有儿子，新的没儿子\r\n    if (oldChildren.length > 0 && newChildren.length == 0) {\r\n      el.innerHTML = ''\r\n    } else if (newChildren.length > 0 && oldChildren.length == 0) {\r\n      // 新的有儿子节点，老的没有儿子节点，直接插入新的节点\r\n      newChildren.forEach((child) => {\r\n        el.appendChild(createElm(child))\r\n      })\r\n    } else {\r\n      // 新老都有儿子节点\r\n      updataChildren(el, oldChildren, newChildren)\r\n    }\r\n    return el\r\n  }\r\n}\r\n\r\nfunction updataChildren(el, oldChildren, newChildren) {\r\n  //vue2 中如何做的diff算法\r\n  // console.log(oldChildren, newChildren)\r\n  //vue内部做的优化（尽量提升性能， 如果实在不行，在暴力对比）\r\n  //1.在列表中新增和删除指针\r\n  let oldStartIndex = 0\r\n  let oldStartVnode = oldChildren[0]\r\n  let oldEndIndex = oldChildren.length - 1\r\n  let oldEndVnode = oldChildren[oldEndIndex]\r\n\r\n  let newStartIndex = 0\r\n  let newStartVnode = newChildren[0]\r\n  let newEndIndex = newChildren.length - 1\r\n  let newEndVnode = newChildren[newEndIndex]\r\n\r\n  function makeKeyByUIndex(children) {\r\n    console.log(children)\r\n    let map = {}\r\n    children.forEach((item, index) => {\r\n      map[item.key] = index\r\n    })\r\n    return map\r\n  }\r\n\r\n  let mapping = makeKeyByUIndex(oldChildren)\r\n  //diff算法的复杂度是O（n） 比对的时候， 指针交叉的时候就是对比完成了\r\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n    if (!oldStartVnode) {\r\n      // 在指针移动的时候。可能元素已经被移动走了，那就跳过这一项\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n    } else if (!oldEndVnode) {\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n      //头头比较\r\n      patch(oldStartVnode, newStartVnode) // 会递归比较子节点，同时比对两个的差异\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n      newStartVnode = newChildren[++newStartIndex]\r\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n      // 尾尾比较\r\n      patch(oldEndVnode, newEndVnode)\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n      newEndVnode = newChildren[--newEndIndex]\r\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n      //头尾\r\n      patch(oldStartVnode, newEndVnode)\r\n      el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n      newEndVnode = newChildren[--newEndIndex]\r\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n      // 尾头\r\n      patch(oldEndVnode, newStartVnode)\r\n      el.insertBefore(oldEndVnode.el, oldStartVnode.el) // 将尾部的插入到头部去\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n      newStartVnode = newChildren[++newStartIndex]\r\n    } else {\r\n      //之前的逻辑都是考虑用户一些特殊情况，但是有非特殊的，比如乱序\r\n      let moveIndex = mapping[newStartVnode.key]\r\n      console.log(moveIndex)\r\n      if (moveIndex == undefined) {\r\n        // 没有。直接将节点插入到开头的前面\r\n        el.insertBefore(createElm(newStartVnode), oldStartVnode.el)\r\n      } else {\r\n        //有的话需要复用\r\n        let moveVnode = oldChildren[moveIndex]\r\n        patch(moveVnode, newStartVnode)\r\n        el.insertBefore(moveVnode.el, oldStartVnode.el)\r\n        oldChildren[moveIndex] = undefined\r\n      }\r\n      newStartVnode = newChildren[++newStartIndex]\r\n    }\r\n  }\r\n  // console.log(oldEndVnode, newEndVnode)\r\n  if (newStartIndex <= newEndIndex) {\r\n    //  这里可能是向前追加，可能是想后追加\r\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n      // 看一下，当前尾节点的下一个元素是否存在，如果存在则是插入到下一个元素的前面去\r\n      let anchor = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el // 参照物是固定的\r\n      el.insertBefore(createElm(newChildren[i]), anchor)\r\n    }\r\n  }\r\n  if (oldStartIndex <= oldEndIndex) {\r\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n      // 老的多余的，需要删除掉\r\n      let child = oldChildren[i] // 因为child 可能是空节点，undefined，所以要跳过空节点\r\n      child && el.removeChild(child.el)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createComponent(vnode) {\r\n  // 给组件预留一个初始化流程init\r\n  let i = vnode.data\r\n  if ((i = i.hook) && (i = i.init)) {\r\n    i(vnode)\r\n  }\r\n  if (vnode.componentInstance) {\r\n    // 说明是组件\r\n    return true\r\n  }\r\n}\r\n\r\nexport function createElm(vnode) {\r\n  let { tag, data, children, text, vm } = vnode\r\n  // 让虚拟节点和真实节点做映射关系, 后续某个节点更新了,可以跟踪到真实节点,并且更新真实节点\r\n  if (typeof tag === 'string') {\r\n    if (createComponent(vnode)) {\r\n      return vnode.componentInstance.$el\r\n    }\r\n    vnode.el = document.createElement(tag)\r\n    updataProperties(vnode)\r\n    debugger\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElm(child))\r\n    })\r\n  } else {\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n  return vnode.el\r\n}\r\n\r\n// 后续写diff算法的时候 在完善\r\nfunction updataProperties(vnode, oldProps = {}) {\r\n  // for (let key in props) {\r\n  //   el.setAttribute(key, props[key])\r\n  // }\r\n  // 这里的逻辑可能是初次渲染，初次渲染直接用oldProps 给vnode的el复制即可\r\n  // 更新逻辑拿到老的props和vnode里面的data进行比对\r\n  let el = vnode.el\r\n  let newProps = vnode.data || {}\r\n\r\n  let newStyle = newProps.style || {}\r\n  let oldStyle = oldProps.style || {}\r\n\r\n  for (let key in oldStyle) {\r\n    // 老的样式有，新的没有，就把页面上的样式删除掉\r\n    if (!newStyle[key]) {\r\n      el.style[key] = ''\r\n    }\r\n  }\r\n  // 新旧比对，两个对象如何比对差异\r\n  for (let key in newProps) {\r\n    if (key == 'style') {\r\n      for (let key in newStyle) {\r\n        el.style[key] = newStyle[key]\r\n      }\r\n    } else {\r\n      el.setAttribute(key, newProps[key])\r\n    }\r\n  }\r\n  for (let key in oldProps) {\r\n    if (!newProps[key]) {\r\n      el.removeAttribute(key)\r\n    }\r\n  }\r\n}\r\n","import Watcher from './observe/watcher'\r\nimport { patch } from './vdom/patch'\r\n\r\nexport function mountComponent(vm) {\r\n  let updataComponent = () => {\r\n    vm._updata(vm._render())\r\n  }\r\n\r\n  callHook(vm, 'beforeCreate')\r\n  new Watcher(\r\n    vm,\r\n    updataComponent,\r\n    () => {\r\n      console.log('后续增添更新钩子函数 updata')\r\n      callHook(vm, 'create')\r\n    },\r\n    true\r\n  )\r\n  callHook(vm, 'mounted')\r\n}\r\n\r\nexport function lifeCycleMixin(Vue) {\r\n  Vue.prototype._updata = function (vnode) {\r\n    // 采用 先序深度遍历, 创建节点,(遇到节点就创造节点,递归创建)\r\n    const vm = this\r\n    let preVnode = vm._preVnode\r\n    // 第一次渲染是根据虚拟节点，生成真实节点，替换原来的节点\r\n    vm._preVnode = vnode\r\n    // 第二次，生成一个新的虚拟节点，和老的虚拟节点进行对比\r\n    if (!preVnode) {\r\n      vm.$el = patch(vm.$el, vnode)\r\n    } else {\r\n      vm.$el = patch(preVnode, vnode)\r\n    }\r\n  }\r\n}\r\n\r\nexport function callHook(vm, hook) {\r\n  let handlers = vm.$options[hook]\r\n  if (handlers) {\r\n    handlers.forEach((fn) => {\r\n      fn.call(vm) // 生命周期的this 永远指向实例\r\n    })\r\n  }\r\n}\r\n","let oldArrayPrototype = Array.prototype // 获取老的数组的原型方法\r\n\r\nexport let arrayMethods = Object.create(oldArrayPrototype) // 让arrayMethods 通过__proto__能获取到数组的方法\r\n\r\nlet methods = ['push', 'shift', 'pop', 'unshift', 'reverse', 'sort', 'splice']\r\n\r\nmethods.forEach((method) => {\r\n  arrayMethods[method] = function (...args) {\r\n    // 数组的方法进行重写\r\n    // console.log('数组的方法进行重写')\r\n    // 数组新增的属性，要看一下是不是对象，如果是对象，继续进行劫持\r\n\r\n    // 需要调用数组原生逻辑\r\n    oldArrayPrototype[method].call(this, ...args)\r\n    // 可以添加自己逻辑，函数劫持，切片\r\n    let inserted = []\r\n    let ob = this.__ob__\r\n    switch (method) {\r\n      case 'splice': // 修改 删除 添加\r\n        inserted = args.slice(2) // splice 方法从第三个参数起，是增添的新数据\r\n        break\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break\r\n    }\r\n    // inserted[] 遍历数组 看一下他是否需要进行二次劫持\r\n    if (inserted) {\r\n      ob.observeArray(inserted)\r\n    }\r\n    ob.dep.notify() // 触发页面更新流程\r\n  }\r\n})\r\n\r\n// 属性的查找: 是先找自己身上的,找不到去原型上查找\r\n// arrayMethods.push()\r\n// arrayMethods.shift()\r\n// arrayMethods.pop()\r\n// arrayMethods.unshift()\r\n// arrayMethods.reverse()\r\n// arrayMethods.sort()\r\n// arrayMethods.splice()\r\n","import { isArray, isObject } from '../utils'\r\nimport { arrayMethods } from './array'\r\nimport Dep from './dep'\r\n// 1.每个对象都有一个__proto__ 属性, 它指向所属类的原型本身\r\n// 2. 每个原型上都有一个constructor 属性,指向函数本身\r\nclass Observer {\r\n  constructor(value) {\r\n    // 不让__ob__ 被遍历到\r\n    // value.__ob__ = this // 给对象和数组添加一个自定义属性\r\n\r\n    // 如果给一个对象添加一个不存在的属性，我希望也能更新视图{}.dep\r\n    this.dep = new Dep() // 给对象和数组都增加dep属性\r\n    Object.defineProperty(value, '__ob__', {\r\n      value: this,\r\n      enumerable: false //表示这个属性不能被列举出来，不能被循环到\r\n    })\r\n\r\n    if (isArray(value)) {\r\n      // 更改数组原型方法, 如果是数组,就重写数组的原型链\r\n      value.__proto__ = arrayMethods // 重写数组方法\r\n      this.observeArray(value)\r\n\r\n      // 数组如何依赖收集，数组更新的时候，如何触发更新\r\n    } else {\r\n      this.walk(value) // 核心就是循环对象\r\n    }\r\n  }\r\n  observeArray(data) {\r\n    // 递归遍历数组,对数组内部的对象再次重写[[]] [{}]\r\n    data.forEach((item) => {\r\n      // 数组里如果是引用类型,那么是响应式\r\n      observe(item)\r\n    })\r\n  }\r\n  walk(data) {\r\n    Object.keys(data).forEach((key) => {\r\n      // 使用defineProperty重新定义\r\n      defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n}\r\n// vue2应用了defineProperty 需要一加载的时候就进行递归操作,如果层次过深也会浪费性能\r\n// 1.性能优化的原则\r\n// 1) 不要把所有的数据都放在data中,因为所有的数据都会增加get和set\r\n// 2)不要写数据的时候层次过深, 尽量扁平化\r\n// 3) 不要频繁获取数据\r\n// 4)如果数据不需要响应式,可以使用Object.freeze 冻结属性\r\n\r\nfunction dependArray(value) {\r\n  // 让数组的引用类型都收集依赖\r\n  for (let i = 0; i < value.length; i++) {\r\n    let current = value[i]\r\n    current.__ob__ && current.__ob__.dep.depend()\r\n    if (Array.isArray(current)) {\r\n      dependArray(current)\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineReactive(obj, key, value) {\r\n  let childOb = observe(value) // 递归进行观测数据. 不管有多少层,我都进行defineProperty\r\n  //childOb 如果有值 那么就是数组或对象\r\n  // 数组的dep\r\n\r\n  // vue2 慢的原因 主要在这个方法中\r\n  let dep = new Dep() // 每个属性都增加一个dep\r\n  Object.defineProperty(obj, key, {\r\n    get() {\r\n      // debugger\r\n      if (Dep.target) {\r\n        dep.depend()\r\n        if (childOb) {\r\n          // 取属性的时候，会对对应的值（对象本身和数组）进行依赖收集\r\n          childOb.dep.depend() // 让数组和对象也记住当前的watcher\r\n          if (Array.isArray(value)) {\r\n            // 可能是数组套数组的可能\r\n            dependArray(value)\r\n          }\r\n        }\r\n      }\r\n\r\n      return value // 闭包, 此value 会像上层的value进行查找\r\n    },\r\n    // 一个属性可能对应多个watcher， 数组也有更新\r\n    set(newValue) {\r\n      // 如果设置的是一个对象,那么会再次进行劫持\r\n      if (newValue === value) return\r\n      observe(newValue)\r\n      // console.log('修改')\r\n      value = newValue\r\n      dep.notify()\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(value) {\r\n  // 1.如果value不是对象就不用观测了,说明写的有问题\r\n  if (!isObject(value)) return\r\n\r\n  if (value.__ob__) return // 一个对象不需要重新被观测\r\n\r\n  // 2.需要对 对象进行观测, 最外层必须是一个{}, 不能是数组\r\n  // 如果一个数据已经被观测过了, 就不要在进行观测了, 用类来实现, 观测过就增加一个标识,再观测的时候,可以先检测是否观测过,观测过了就跳过检测\r\n  return new Observer(value)\r\n}\r\n\r\n// 1.默认vue在初始化的时候，会对对象每一个属性都进行劫持， 增加dep属性，当取值的时候会做依赖收集\r\n// 2.默认还会对属性值是（对象和数组的本身进行增加dep属性） 进行依赖收集\r\n// 3.如果是属性变化 触发属性对应的dep去更新\r\n// 4.如果是数组更新，触发数组的本身的dep 进行更新\r\n// 5.如果是数组还要 让数组中的对象类型也进行依赖收集（递归依赖收集）\r\n\r\n// 6.如果数组里面放对象，默认对象里的属性是会进行依赖收集的，因为在取值时，会进行JSON.stringify操作\r\n","import { observe } from './observe/index'\r\nimport { isFunction } from './utils'\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, key, source) {\r\n  // 取值的时候做代理, 不是暴力的把_data 属性赋值给vm, 而且直接赋值会有命名冲突问题\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key]\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  // 如果用户传递的是一个函数,则取函数的返回值作为对象, 如果就是对象就直接使用那个对象\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data //_data已经是响应值了\r\n  // 需要将data 变成响应式的,Object.defineProperty, 重写data中的所有属性\r\n  observe(data)\r\n\r\n  for (let key in data) {\r\n    // vm.msg => vm._data.msg\r\n    proxy(vm, key, '_data')\r\n  }\r\n}\r\n","import { compileToFunction } from './compiler/index'\r\nimport { mountComponent } from './lifecycle'\r\nimport { initState } from './state'\r\nimport { mergeOptions, nextTick } from './utils'\r\n\r\nexport function initMixin(Vue) {\r\n  // 后续组件化开发的时候，Vue.extend 可以创造子组件， 子组件可以继承Vue，子组件也可以调用_init 方法\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this\r\n    // 把用户的选项放vm上， 这样在其他方法中都可以获取到options\r\n    // 因为全局定义的内容，会混合在当前实例上\r\n    vm.$options = mergeOptions(vm.constructor.options, options)\r\n    //$options选项\r\n    // options 中是用户传入的数据 el， data\r\n    initState(vm)\r\n    if (vm.$options.el) {\r\n      // 要将数据挂载到页面上\r\n      // 现在数据已经被劫持了，数据变化需要更新视图，diff算法更新需要更新的部分\r\n      // vue => template (写起来更符合直觉) => jsx(灵活)\r\n      // vue3 template 写起来性能会更高一些， 内部做了跟多优化\r\n      // template -> ast 语法树(用来描述语法的，描述语法本身的) => 描述成一个树结构 => 将代码重组成js语法\r\n      // 模板编译原理(把template 模板编译成 render函数 => 虚拟dom => diff算法比对虚拟dom)\r\n      // ast => render返回 => vnode => 生成真是dom\r\n      //        更新的时候调用render => 新的vnode => 新旧对比 => 更新真实dom\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    const opts = vm.$options\r\n    el = document.querySelector(el) // 获取真实元素\r\n    vm.$el = el // 页面真实元素\r\n\r\n    if (!opts.render) {\r\n      // 模板编译\r\n      let template = opts.template\r\n      if (!template) {\r\n        template = el.outerHTML\r\n      }\r\n      let render = compileToFunction(template)\r\n      opts.render = render\r\n    }\r\n    mountComponent(vm)\r\n  }\r\n  Vue.prototype.$nextTick = nextTick\r\n}\r\n","import { isObject } from './utils'\r\nimport { createElement, createText } from './vdom/index'\r\n\r\nexport function renderMixin(Vue) {\r\n  // createElement 创建元素型节点\r\n  Vue.prototype._c = function () {\r\n    const vm = this\r\n    return createElement(vm, ...arguments)\r\n  }\r\n  // 创建文本的虚拟节点\r\n  Vue.prototype._v = function (text) {\r\n    const vm = this\r\n    return createText(vm, text) // 描述虚拟节点是属于哪个实例\r\n  }\r\n  // JSON.stringify\r\n  Vue.prototype._s = function (val) {\r\n    if (isObject(val)) {\r\n      return JSON.stringify(val)\r\n    } else {\r\n      return val\r\n    }\r\n  }\r\n  Vue.prototype._render = function () {\r\n    const vm = this\r\n    let { render } = vm.$options\r\n    let vnode = render.call(vm)\r\n    return vnode\r\n  }\r\n}\r\n","import { compileToFunction } from './compiler/index'\r\nimport { initGlobalApi } from './global-api/index'\r\nimport { initMixin } from './init'\r\nimport { lifeCycleMixin } from './lifecycle'\r\nimport { renderMixin } from './render'\r\nimport { createElm, patch } from './vdom/patch'\r\n// vue 要如何实现， 原型模式， 所有的功能都能通过原型扩展的方式来添加\r\nfunction Vue(options) {\r\n  // 实现vue的初始化\r\n  this._init(options)\r\n}\r\ninitMixin(Vue)\r\nrenderMixin(Vue)\r\nlifeCycleMixin(Vue)\r\ninitGlobalApi(Vue)\r\n\r\n// 先生成一个虚拟节点\r\n// let vm1 = new Vue({\r\n//   data() {\r\n//     return {\r\n//       name: 'jw'\r\n//     }\r\n//   }\r\n// })\r\n// let render1 = compileToFunction(`<div>\r\n//   <li key=\"A\">A</li>\r\n//   <li key=\"B\">B</li>\r\n//   <li key=\"C\">C</li>\r\n//   <li key=\"D\">D</li>\r\n// </div>`)\r\n// let oldVnode = render1.call(vm1)\r\n// let el1 = createElm(oldVnode)\r\n// document.body.appendChild(el1)\r\n// // 在生成一个新的虚拟节点， patch\r\n// let vm2 = new Vue({\r\n//   data() {\r\n//     return {\r\n//       name: 'zf'\r\n//     }\r\n//   }\r\n// })\r\n// {\r\n//   /* <li key=\"F\" style=\"color: green;\">F</li>\r\n//   <li key=\"B\" style=\"color: grey;\">B</li>\r\n//   <li key=\"A\" style=\"color: red;\">A</li>\r\n//   <li key=\"E\" style=\"color: blue;\">E</li>\r\n//   <li key=\"P\" style=\"color: blue;\">P</li> */\r\n// }\r\n// let render2 = compileToFunction(`<div>\r\n// <li key=\"F\">F</li>\r\n// <li key=\"B\">B</li>\r\n// <li key=\"A\">A</li>\r\n// <li key=\"E\">E</li>\r\n// <li key=\"P\">P</li>\r\n// </div>`)\r\n// let newVnode = render2.call(vm2)\r\n// setTimeout(() => {\r\n//   patch(oldVnode, newVnode) // 比对两个虚拟节点差异，更新需要更新的地方\r\n// }, 2000)\r\nexport default Vue\r\n\r\n// 1.new Vue 会调用_init方法进行初始化\r\n// 2.会将用户的选项放到vm.$options 上\r\n// 3.会对当前属性上搜索有没有data数据\r\n// 4.有data判断data是不是一个函数,如果是函数返回值 initData\r\n// 5.observe 去观测data中的数据\r\n// 6.vm上像取值也能取到data中的数据, vm._data = data 这样用户能取到data\r\n// 7.用户觉得有点麻烦 vm.xxx => vm._data\r\n\r\n// 8.如果更新对象不存在的属性,会导致视图不更新, 如果是数组更新索引和长度不会触发更新\r\n// 9.如果替换成一个新对象,新对象会被进行劫持,如果是数组通过方法改变,也会被劫持\r\n// 通过__ob__进行标识这个对象被监控过, (在vue中被监控对象身上都有一个__ob__ 这个属性)\r\n// 10.如果你就像改索引，可以使用$set 方法，内部就是splice()\r\n\r\n// 如果有el 需要挂载到页面上\r\n\r\n// 依赖更新\r\n//只有在根组件的情况， 每个属性都有一个dep\r\n//1.vue里面用到了观察者模式，默认组件渲染的时候，会创建一个watcher （并且渲染视图）\r\n//2.当视图渲染的时候，会取data中的数据，会走每个属性的get方法，就让这个属性的dep记录watcher\r\n//3.同时让watcher 也记住dep （这个逻辑目前没用到）dep和watcher 是多对多的关系，因为一个属性可能对应多个视图，一个视图对应多个数据\r\n//4.如果数据发生变化，会通知对应属性的dep ，依次通知存放的watcher去更新\r\n\r\n// 1. Vue.component 注册成全局组件，内部会自动调用Vue.extend方法，返回组件的构造函数\r\n// 2. 组件初始化的时候，会做成一个合并mergeOptions（自己的组件.__proto__ = 全局组件）\r\n// 3. 内部会对模板进行编译操作_c（组件名字）做筛查，如果是组件就创造一个组件的虚拟节点，还会判断Ctor如果是对象会调用Vue.extend， 所有的组件都是通过Vue.extend方法来实现的（componentOptions里面放着组件的所有内容 属性的实现， 事件的实现，插槽的内容，Ctor）\r\n// 4. 创建组件的真实节点，（new Ctor 拿到组件实例， 并且调用组件的$mount 方法 （会生成一个$el 对应组件模板渲染后的结果）） vnode.componentInstance = new Ctor() vnode.componentInstance => 组件渲染后结果\r\n// 5. 将组件的vnode.componentInstance.$el 插入到父标签中\r\n// 6. 组件在new Ctor()时 会进行组件的初始化， 给组件再次添加一个独立的渲染watcher（每个组件都有自己的watcher）更新时。只需要更新自己组件对用的渲染watcher（因为组件渲染时组件对用的属性会收集自己的渲染watcher\r\n"],"names":["id","createComponent"],"mappings":";;;;;;EAAA,MAAM,YAAY,GAAG,2BAA0B;EAC/C,SAAS,QAAQ,CAAC,KAAK,EAAE;EACzB;EACA,EAAE,IAAI,GAAG,GAAG,GAAE;EACd,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,EAAC;EACvB,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;EAC/B,MAAM,IAAI,MAAM,GAAG,GAAE;EACrB,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAoB,EAAE,YAAY;EAC3D,QAAQ,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAC;EAC3C,OAAO,EAAC;EACR,MAAM,IAAI,CAAC,KAAK,GAAG,OAAM;EACzB,KAAK;EACL,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;EACxD,GAAG;EACH,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;AACD;EACA,SAAS,GAAG,CAAC,EAAE,EAAE;EACjB,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;EACpB,IAAI,OAAO,QAAQ,CAAC,EAAE,CAAC;EACvB,GAAG,MAAM;EACT,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,KAAI;EACtB,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;EACxD;EACA;EACA,IAAI,IAAI,SAAS,IAAI,YAAY,CAAC,SAAS,GAAG,CAAC,EAAC;EAChD,IAAI,IAAI,MAAM,GAAG,GAAE;EACnB,IAAI,IAAI,MAAK;EACb,IAAI,QAAQ,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;EAC9C;EACA,MAAM,IAAI,KAAK,GAAG,KAAK,CAAC,MAAK;EAC7B,MAAM,IAAI,KAAK,GAAG,SAAS,EAAE;EAC7B,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,EAAC;EACjE,OAAO;EACP,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAC;EAC3C,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAM;EACzC,KAAK;EACL,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE;EACjC,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAC;EACxD,KAAK;EACL,IAAI,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,GAAG;EACH,CAAC;AACD;EACA,SAAS,WAAW,CAAC,EAAE,EAAE;EACzB,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,SAAQ;EAC5B,EAAE,IAAI,QAAQ,EAAE;EAChB,IAAI,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;EACtD,GAAG;EACH,EAAE,OAAO,KAAK;EACd,CAAC;EACM,SAAS,QAAQ,CAAC,GAAG,EAAE;EAC9B,EAAE,IAAI,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAC;EACjC,EAAE,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC;AACtF,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE;AAClC,GAAG,CAAC,EAAC;EACL,EAAE,OAAO,IAAI;EACb;;EC1DA,MAAM,MAAM,GAAG,CAAC,4BAA4B,EAAC;EAC7C,MAAM,YAAY,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAC;EACnD,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC,EAAC;EACpD,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,EAAC;EACvD,MAAM,SAAS,GAAG,4EAA2E;EAC7F,MAAM,aAAa,GAAG,aAAY;EAE3B,SAAS,UAAU,CAAC,IAAI,EAAE;EACjC;EACA;EACA,EAAE,IAAI,KAAK,GAAG,GAAE;EAChB,EAAE,IAAI,IAAI,GAAG,KAAI;EACjB,EAAE,SAAS,gBAAgB,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE;EACvD,IAAI,OAAO;EACX,MAAM,GAAG;EACT,MAAM,IAAI,EAAE,CAAC;EACb,MAAM,QAAQ,EAAE,EAAE;EAClB,MAAM,MAAM;EACZ,MAAM,KAAK;EACX,KAAK;EACL,GAAG;EACH,EAAE,SAAS,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE;EAC7B;EACA,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;EACxC,IAAI,IAAI,OAAO,GAAG,gBAAgB,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAC;EACtD,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;EACtB;EACA,MAAM,IAAI,GAAG,QAAO;EACpB,KAAK;EACL,IAAI,IAAI,MAAM,EAAE;EAChB,MAAM,OAAO,CAAC,MAAM,GAAG,OAAM;EAC7B,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAC;EACnC,KAAK;EACL,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,EAAC;EACvB,GAAG;EACH,EAAE,SAAS,GAAG,CAAC,OAAO,EAAE;EACxB,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,GAAE;EAC5B,IAAI,IAAI,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE;EAC/B,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC;EACzB,KAAK;EACL,GAAG;EACH,EAAE,SAAS,IAAI,CAAC,KAAK,EAAE;EACvB,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;EACxC,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,EAAC;EACpC,IAAI,IAAI,KAAK,EAAE;EACf,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;EAC3B,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,KAAK;EACnB,OAAO,EAAC;EACR,KAAK;EACL,GAAG;EACH,EAAE,SAAS,OAAO,CAAC,GAAG,EAAE;EACxB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAC;EAC9B,GAAG;EACH,EAAE,SAAS,cAAc,GAAG;EAC5B,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAC;EAC1C,IAAI,IAAI,KAAK,EAAE;EACf,MAAM,MAAM,KAAK,GAAG;EACpB,QAAQ,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;EACzB,QAAQ,KAAK,EAAE,EAAE;EACjB,QAAO;EACP,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC;EAC9B,MAAM,IAAI,IAAG;EACb,MAAM,IAAI,KAAI;EACd,MAAM,OAAO,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,KAAK,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE;EACnF;EACA,QAAQ,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,EAAC;EACjF,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC;EAC/B,OAAO;EACP,MAAM,IAAI,GAAG,EAAE;EACf,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC;EAC9B,OAAO;EACP,MAAM,OAAO,KAAK;EAClB,KAAK;EACL,IAAI,OAAO,KAAK;EAChB,GAAG;EACH,EAAE,OAAO,IAAI,EAAE;EACf;EACA,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC;EACjC,IAAI,IAAI,KAAK,IAAI,CAAC,EAAE;EACpB;EACA,MAAM,MAAM,aAAa,GAAG,cAAc,GAAE;EAC5C,MAAM,IAAI,aAAa,EAAE;EACzB;EACA,QAAQ,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,aAAa,CAAC,KAAK,EAAC;EACzD,QAAQ,QAAQ;EAChB,OAAO;EACP,MAAM,IAAI,YAAW;EACrB,MAAM,KAAK,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG;EAC9C;EACA,QAAQ,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAC;EAC3B,QAAQ,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC;EACtC,QAAQ,QAAQ;EAChB,OAAO;EACP,MAAM,KAAK;EACX,KAAK;EACL;EACA,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;EACnB,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAC;EAC1C,MAAM,IAAI,CAAC,KAAK,EAAC;EACjB,MAAM,OAAO,CAAC,KAAK,CAAC,MAAM,EAAC;EAC3B,KAAK;EACL,GAAG;EACH,EAAE,OAAO,IAAI;EACb;;ECrGO,SAAS,iBAAiB,CAAC,QAAQ,EAAE;EAC5C;EACA,EAAE,IAAI,GAAG,GAAG,UAAU,CAAC,QAAQ,EAAC;EAChC;EACA;AACA;EACA;EACA,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAC;EAC1B,EAAE,IAAI,MAAM,GAAG,IAAI,QAAQ,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC,EAAC;EACzD,EAAE,OAAO,MAAM;EACf;EACA;EACA;EACA;EACA;;ECjBO,SAAS,UAAU,CAAC,GAAG,EAAE;EAChC,EAAE,OAAO,OAAO,GAAG,IAAI,UAAU;EACjC,CAAC;AACD;EACO,SAAS,QAAQ,CAAC,GAAG,EAAE;EAC9B,EAAE,OAAO,OAAO,GAAG,IAAI,QAAQ,IAAI,GAAG,KAAK,IAAI;EAC/C,CAAC;AACD;EACA,IAAI,SAAS,GAAG,GAAE;EAClB,IAAI,OAAO,GAAG,MAAK;EACnB,SAAS,cAAc,GAAG;EAC1B,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAC;EACjC,EAAE,SAAS,GAAG,GAAE;EAChB,EAAE,OAAO,GAAG,MAAK;EACjB,CAAC;EACM,SAAS,QAAQ,CAAC,EAAE,EAAE;EAC7B;EACA;EACA,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,EAAC;EACpB,EAAE,IAAI,CAAC,OAAO,EAAE;EAChB,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,cAAc,EAAC;EAC1C,IAAI,OAAO,GAAG,KAAI;EAClB,GAAG;EACH,CAAC;AACD;EACO,IAAI,OAAO,GAAG,KAAK,CAAC,QAAO;AAClC;EACA;EACA;AACA;EACA,IAAI,MAAM,GAAG,GAAE;EACf,IAAI,SAAS,GAAG,CAAC,cAAc,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,EAAC;EACrE,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;EAC5B,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,UAAU,SAAS,EAAE,QAAQ,EAAE;EAChD,IAAI,IAAI,QAAQ,EAAE;EAClB,MAAM,IAAI,SAAS,EAAE;EACrB;EACA,QAAQ,OAAO,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;EACzC,OAAO,MAAM;EACb;EACA,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;EAC/B,UAAU,OAAO,QAAQ;EACzB,SAAS,MAAM;EACf,UAAU,OAAO,CAAC,QAAQ,CAAC;EAC3B,SAAS;EACT,OAAO;EACP,KAAK,MAAM;EACX,MAAM,OAAO,SAAS;EACtB,KAAK;EACL,IAAG;EACH,CAAC,EAAC;AACF;EACA,MAAM,CAAC,UAAU,GAAG,UAAU,SAAS,EAAE,QAAQ,EAAE;EACnD,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAC;AACpC;EACA,EAAE,IAAI,QAAQ,EAAE;EAChB;EACA,IAAI,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;EAC9B,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAC;EAC9B,KAAK;EACL,GAAG;EACH,EAAE,OAAO,GAAG;EACZ,EAAC;AACD;EACO,SAAS,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE;EAClD,EAAE,MAAM,OAAO,GAAG,GAAE;EACpB,EAAE,KAAK,MAAM,GAAG,IAAI,SAAS,EAAE;EAC/B,IAAI,UAAU,CAAC,GAAG,EAAC;EACnB,GAAG;EACH,EAAE,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;EAC9B,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;EACxC,MAAM,UAAU,CAAC,GAAG,EAAC;EACrB,KAAK;EACL,GAAG;EACH,EAAE,SAAS,UAAU,CAAC,GAAG,EAAE;EAC3B;EACA,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,EAAC;EAC3B,IAAI,IAAI,KAAK,EAAE;EACf,MAAM,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,EAAC;EACzD,KAAK,MAAM;EACX,MAAM,OAAO,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,GAAG,EAAC;EACpD,KAAK;EACL,GAAG;EACH,EAAE,OAAO,OAAO;EAChB,CAAC;AACD;EACA,SAAS,OAAO,CAAC,GAAG,EAAE;EACtB,EAAE,IAAI,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,EAAC;EAC9B,EAAE,OAAO,UAAU,OAAO,EAAE;EAC5B,IAAI,OAAO,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC;EACpC,GAAG;EACH,CAAC;AACD;EACO,MAAM,aAAa,GAAG,OAAO;EACpC,EAAE,uEAAuE;EACzE,IAAI,iEAAiE;EACrE,IAAI,0CAA0C;EAC9C,IAAI,yEAAyE;EAC7E,IAAI,0EAA0E;EAC9E;;ECjGO,SAAS,aAAa,CAAC,GAAG,EAAE;EACnC,EAAE,GAAG,CAAC,OAAO,GAAG,GAAE;EAClB,EAAE,GAAG,CAAC,KAAK,GAAG,UAAU,OAAO,EAAE;EACjC,IAAI,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAC;EACtD,IAAI,OAAO,IAAI;EACf,IAAG;EACH,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,IAAG;EACzB;EACA,EAAE,GAAG,CAAC,MAAM,GAAG,UAAU,GAAG,EAAE;EAC9B;EACA,IAAI,MAAM,KAAK,GAAG,KAAI;EACtB,IAAI,MAAM,GAAG,GAAG,UAAU,OAAO,EAAE;EACnC;EACA,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAC;EACzB,MAAK;EACL,IAAI,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAC;EAClD,IAAI,GAAG,CAAC,SAAS,CAAC,WAAW,GAAG,IAAG;EACnC,IAAI,GAAG,CAAC,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EAClD;EACA;EACA,IAAI,OAAO,GAAG;EACd,IAAG;EACH,EAAE,GAAG,CAAC,OAAO,CAAC,UAAU,GAAG,GAAE;EAC7B,EAAE,GAAG,CAAC,SAAS,GAAG,UAAU,EAAE,EAAE,UAAU,EAAE;EAC5C;EACA,IAAI,IAAI,IAAI,GAAG,UAAU,CAAC,IAAI,IAAI,GAAE;EACpC,IAAI,UAAU,CAAC,IAAI,GAAG,KAAI;EAC1B,IAAI,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;EAC9B,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,EAAC;EACzC,KAAK;EACL,IAAI,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,WAAU;EAC7C,IAAG;EACH;;EClCA,IAAIA,IAAE,GAAG,EAAC;EACV;EACA;EACA,MAAM,GAAG,CAAC;EACV,EAAE,WAAW,GAAG;EAChB;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,GAAE;EAClB,IAAI,IAAI,CAAC,EAAE,GAAGA,IAAE,GAAE;EAClB,GAAG;EACH,EAAE,MAAM,GAAG;EACX;EACA;EACA,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAC;EAC3B,GAAG;EACH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC;EAC3B,GAAG;EACH,EAAE,MAAM,GAAG;EACX,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,MAAM,EAAE,EAAC;EACpD,GAAG;EACH,CAAC;EACD,GAAG,CAAC,MAAM,GAAG,KAAI;;ECnBjB,IAAI,KAAK,GAAG,GAAE;EACd,IAAI,GAAG,GAAG,GAAE;AACZ;EACA,SAAS,mBAAmB,GAAG;EAC/B,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,GAAG,EAAE,EAAC;EAC3C,EAAE,KAAK,GAAG,GAAE;EACZ,EAAE,GAAG,GAAG,GAAE;EACV,EAAE,OAAO,GAAG,MAAK;EACjB,CAAC;AACD;EACA,IAAI,OAAO,GAAG,MAAK;EACZ,SAAS,YAAY,CAAC,OAAO,EAAE;EACtC;EACA,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,GAAE;EACrB,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;EACvB,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI;EAClB,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,EAAC;EACvB,IAAI,IAAI,CAAC,OAAO,EAAE;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,QAAQ,CAAC,mBAAmB,EAAC;EACnC,MAAM,OAAO,GAAG,KAAI;EACpB,KAAK;EACL,GAAG;EACH;;EC7BA,IAAI,EAAE,GAAG,EAAC;EACV,MAAM,OAAO,CAAC;EACd,EAAE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE;EACnC,IAAI,IAAI,CAAC,EAAE,GAAG,GAAE;EAChB,IAAI,IAAI,CAAC,EAAE,GAAG,GAAE;EAChB,IAAI,IAAI,CAAC,EAAE,GAAG,GAAE;EAChB,IAAI,IAAI,CAAC,OAAO,GAAG,QAAO;EAC1B,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,GAAE;EAClB,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,GAAE;EAC3B,IAAI,IAAI,CAAC,IAAI,GAAG,GAAE;AAClB;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,GAAE;EACpB,IAAI,IAAI,CAAC,GAAG,GAAE;EACd,GAAG;EACH,EAAE,MAAM,CAAC,GAAG,EAAE;EACd,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,GAAE;EACpB,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;EAC/B,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAC;EAC1B,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC;EACzB,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,EAAC;EACtB,KAAK;EACL,GAAG;EACH,EAAE,GAAG,GAAG;EACR;EACA,IAAI,GAAG,CAAC,MAAM,GAAG,KAAI;EACrB,IAAI,IAAI,CAAC,MAAM,GAAE;EACjB,IAAI,GAAG,CAAC,MAAM,GAAG,KAAI;EACrB,GAAG;EACH,EAAE,MAAM,GAAG;EACX;EACA,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC;EACvB,IAAI,YAAY,CAAC,IAAI,EAAC;EACtB;EACA;EACA,GAAG;EACH,EAAE,GAAG,GAAG;EACR,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC;EACvB,IAAI,IAAI,CAAC,GAAG,GAAE;EACd,GAAG;EACH;;ECvCA,SAASC,iBAAe,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE;EAC7D,EAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;EACtB;EACA,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAC;EACzC,GAAG;AACH;EACA,EAAE,IAAI,CAAC,IAAI,GAAG;EACd;EACA,IAAI,IAAI,CAAC,KAAK,EAAE;EAChB;EACA,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,iBAAiB,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,EAAC;EAC1D,MAAM,KAAK,CAAC,MAAM,GAAE;EACpB;EACA,KAAK;EACL,IAAG;EACH,EAAE,IAAI,cAAc,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAC;EAC/F,EAAE,OAAO,cAAc;EACvB,CAAC;AACD;EACA;EACO,SAAS,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,QAAQ,EAAE;EAC/D;EACA,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;EAC3B,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,EAAC;EAC1C,IAAI,OAAOA,iBAAe,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;EACnE,GAAG;AACH;EACA,EAAE,OAAO,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC;EAC5D,CAAC;AACD;EACO,SAAS,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE;EACrC,EAAE,OAAO,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC;EACpE,CAAC;AACD;EACA;EACA;EACO,SAAS,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE;EAChD,EAAE,OAAO,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG;EACrE,CAAC;AACD;EACA,SAAS,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE;EAC5D,EAAE,OAAO;EACT,IAAI,EAAE;EACN,IAAI,GAAG;EACP,IAAI,QAAQ;EACZ,IAAI,IAAI;EACR,IAAI,GAAG;EACP,IAAI,IAAI;EACR,IAAI,gBAAgB,EAAE,OAAO;EAC7B,GAAG;EACH;;EClDO,SAAS,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE;EACvC,EAAE,IAAI,CAAC,QAAQ,EAAE;EACjB;EACA,IAAI,OAAO,SAAS,CAAC,KAAK,CAAC;EAC3B,GAAG;AACH;EACA,EAAE,MAAM,aAAa,GAAG,QAAQ,CAAC,SAAQ;AACzC;EACA,EAAE,IAAI,aAAa,EAAE;EACrB,IAAI,MAAM,GAAG,GAAG,SAAS,CAAC,KAAK,EAAC;EAChC,IAAI,MAAM,UAAU,GAAG,QAAQ,CAAC,WAAU;EAC1C,IAAI,UAAU,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,CAAC,WAAW,EAAC;EACtD,IAAI,UAAU,CAAC,WAAW,CAAC,QAAQ,EAAC;EACpC,IAAI,OAAO,GAAG;EACd,GAAG,MAAM;EACT;EACA;EACA;EACA,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;EACvC;EACA,MAAM,OAAO,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC;EAC/E,KAAK;EACL,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,EAAC;EACrC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;EACvB;EACA,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,EAAE;EACxC,QAAQ,QAAQ,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;EAC5C,OAAO;EACP,KAAK;EACL;EACA,IAAI,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAC;EAC1C;EACA;EACA,IAAI,IAAI,WAAW,GAAG,QAAQ,CAAC,QAAQ,IAAI,GAAE;EAC7C,IAAI,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,IAAI,GAAE;EAC1C;EACA,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;EAC3D,MAAM,EAAE,CAAC,SAAS,GAAG,GAAE;EACvB,KAAK,MAAM,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;EAClE;EACA,MAAM,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;EACrC,QAAQ,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC;EACxC,OAAO,EAAC;EACR,KAAK,MAAM;EACX;EACA,MAAM,cAAc,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,EAAC;EAClD,KAAK;EACL,IAAI,OAAO,EAAE;EACb,GAAG;EACH,CAAC;AACD;EACA,SAAS,cAAc,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE;EACtD;EACA;EACA;EACA;EACA,EAAE,IAAI,aAAa,GAAG,EAAC;EACvB,EAAE,IAAI,aAAa,GAAG,WAAW,CAAC,CAAC,EAAC;EACpC,EAAE,IAAI,WAAW,GAAG,WAAW,CAAC,MAAM,GAAG,EAAC;EAC1C,EAAE,IAAI,WAAW,GAAG,WAAW,CAAC,WAAW,EAAC;AAC5C;EACA,EAAE,IAAI,aAAa,GAAG,EAAC;EACvB,EAAE,IAAI,aAAa,GAAG,WAAW,CAAC,CAAC,EAAC;EACpC,EAAE,IAAI,WAAW,GAAG,WAAW,CAAC,MAAM,GAAG,EAAC;EAC1C,EAAE,IAAI,WAAW,GAAG,WAAW,CAAC,WAAW,EAAC;AAC5C;EACA,EAAE,SAAS,eAAe,CAAC,QAAQ,EAAE;EACrC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAC;EACzB,IAAI,IAAI,GAAG,GAAG,GAAE;EAChB,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;EACtC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAK;EAC3B,KAAK,EAAC;EACN,IAAI,OAAO,GAAG;EACd,GAAG;AACH;EACA,EAAE,IAAI,OAAO,GAAG,eAAe,CAAC,WAAW,EAAC;EAC5C;EACA,EAAE,OAAO,aAAa,IAAI,WAAW,IAAI,aAAa,IAAI,WAAW,EAAE;EACvE,IAAI,IAAI,CAAC,aAAa,EAAE;EACxB;EACA,MAAM,aAAa,GAAG,WAAW,CAAC,EAAE,aAAa,EAAC;EAClD,KAAK,MAAM,IAAI,CAAC,WAAW,EAAE;EAC7B,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,WAAW,EAAC;EAC9C,KAAK,MAAM,IAAI,WAAW,CAAC,aAAa,EAAE,aAAa,CAAC,EAAE;EAC1D;EACA,MAAM,KAAK,CAAC,aAAa,EAAE,aAAa,EAAC;EACzC,MAAM,aAAa,GAAG,WAAW,CAAC,EAAE,aAAa,EAAC;EAClD,MAAM,aAAa,GAAG,WAAW,CAAC,EAAE,aAAa,EAAC;EAClD,KAAK,MAAM,IAAI,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE;EACtD;EACA,MAAM,KAAK,CAAC,WAAW,EAAE,WAAW,EAAC;EACrC,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,WAAW,EAAC;EAC9C,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,WAAW,EAAC;EAC9C,KAAK,MAAM,IAAI,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,EAAE;EACxD;EACA,MAAM,KAAK,CAAC,aAAa,EAAE,WAAW,EAAC;EACvC,MAAM,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,CAAC,WAAW,EAAC;EACnE,MAAM,aAAa,GAAG,WAAW,CAAC,EAAE,aAAa,EAAC;EAClD,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,WAAW,EAAC;EAC9C,KAAK,MAAM,IAAI,WAAW,CAAC,WAAW,EAAE,aAAa,CAAC,EAAE;EACxD;EACA,MAAM,KAAK,CAAC,WAAW,EAAE,aAAa,EAAC;EACvC,MAAM,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,EAAC;EACvD,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,WAAW,EAAC;EAC9C,MAAM,aAAa,GAAG,WAAW,CAAC,EAAE,aAAa,EAAC;EAClD,KAAK,MAAM;EACX;EACA,MAAM,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,GAAG,EAAC;EAChD,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC;EAC5B,MAAM,IAAI,SAAS,IAAI,SAAS,EAAE;EAClC;EACA,QAAQ,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,EAAE,EAAC;EACnE,OAAO,MAAM;EACb;EACA,QAAQ,IAAI,SAAS,GAAG,WAAW,CAAC,SAAS,EAAC;EAC9C,QAAQ,KAAK,CAAC,SAAS,EAAE,aAAa,EAAC;EACvC,QAAQ,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,EAAC;EACvD,QAAQ,WAAW,CAAC,SAAS,CAAC,GAAG,UAAS;EAC1C,OAAO;EACP,MAAM,aAAa,GAAG,WAAW,CAAC,EAAE,aAAa,EAAC;EAClD,KAAK;EACL,GAAG;EACH;EACA,EAAE,IAAI,aAAa,IAAI,WAAW,EAAE;EACpC;EACA,IAAI,KAAK,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC,IAAI,WAAW,EAAE,CAAC,EAAE,EAAE;EACvD;EACA,MAAM,IAAI,MAAM,GAAG,WAAW,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,GAAE;EAChG,MAAM,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,EAAC;EACxD,KAAK;EACL,GAAG;EACH,EAAE,IAAI,aAAa,IAAI,WAAW,EAAE;EACpC,IAAI,KAAK,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC,IAAI,WAAW,EAAE,CAAC,EAAE,EAAE;EACvD;EACA,MAAM,IAAI,KAAK,GAAG,WAAW,CAAC,CAAC,EAAC;EAChC,MAAM,KAAK,IAAI,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,EAAC;EACvC,KAAK;EACL,GAAG;EACH,CAAC;AACD;EACA,SAAS,eAAe,CAAC,KAAK,EAAE;EAChC;EACA,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,KAAI;EACpB,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;EACpC,IAAI,CAAC,CAAC,KAAK,EAAC;EACZ,GAAG;EACH,EAAE,IAAI,KAAK,CAAC,iBAAiB,EAAE;EAC/B;EACA,IAAI,OAAO,IAAI;EACf,GAAG;EACH,CAAC;AACD;EACO,SAAS,SAAS,CAAC,KAAK,EAAE;EACjC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,MAAK;EAC/C;EACA,EAAE,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;EAC/B,IAAI,IAAI,eAAe,CAAC,KAAK,CAAC,EAAE;EAChC,MAAM,OAAO,KAAK,CAAC,iBAAiB,CAAC,GAAG;EACxC,KAAK;EACL,IAAI,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAC;EAC1C,IAAI,gBAAgB,CAAC,KAAK,EAAC;EAC3B,IAAI,QAAQ;EACZ,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;EAChC,MAAM,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC;EAC5C,KAAK,EAAC;EACN,GAAG,MAAM;EACT,IAAI,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,EAAC;EAC5C,GAAG;EACH,EAAE,OAAO,KAAK,CAAC,EAAE;EACjB,CAAC;AACD;EACA;EACA,SAAS,gBAAgB,CAAC,KAAK,EAAE,QAAQ,GAAG,EAAE,EAAE;EAChD;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,GAAE;EACnB,EAAE,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,IAAI,GAAE;AACjC;EACA,EAAE,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,IAAI,GAAE;EACrC,EAAE,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,IAAI,GAAE;AACrC;EACA,EAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;EAC5B;EACA,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;EACxB,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAE;EACxB,KAAK;EACL,GAAG;EACH;EACA,EAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;EAC5B,IAAI,IAAI,GAAG,IAAI,OAAO,EAAE;EACxB,MAAM,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;EAChC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAC;EACrC,OAAO;EACP,KAAK,MAAM;EACX,MAAM,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,EAAC;EACzC,KAAK;EACL,GAAG;EACH,EAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;EAC5B,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;EACxB,MAAM,EAAE,CAAC,eAAe,CAAC,GAAG,EAAC;EAC7B,KAAK;EACL,GAAG;EACH;;EC5MO,SAAS,cAAc,CAAC,EAAE,EAAE;EACnC,EAAE,IAAI,eAAe,GAAG,MAAM;EAC9B,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,EAAC;EAC5B,IAAG;AACH;EACA,EAAE,QAAQ,CAAC,EAAE,EAAE,cAAc,EAAC;EAC9B,EAAE,IAAI,OAAO;EACb,IAAI,EAAE;EACN,IAAI,eAAe;EACnB,IAAI,MAAM;EACV,MAAM,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAC;EACtC,MAAM,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAC;EAC5B,KAAK;EACL,IAAI,IAAI;EACR,IAAG;EACH,EAAE,QAAQ,CAAC,EAAE,EAAE,SAAS,EAAC;EACzB,CAAC;AACD;EACO,SAAS,cAAc,CAAC,GAAG,EAAE;EACpC,EAAE,GAAG,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,KAAK,EAAE;EAC3C;EACA,IAAI,MAAM,EAAE,GAAG,KAAI;EACnB,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC,UAAS;EAC/B;EACA,IAAI,EAAE,CAAC,SAAS,GAAG,MAAK;EACxB;EACA,IAAI,IAAI,CAAC,QAAQ,EAAE;EACnB,MAAM,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAC;EACnC,KAAK,MAAM;EACX,MAAM,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAC;EACrC,KAAK;EACL,IAAG;EACH,CAAC;AACD;EACO,SAAS,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE;EACnC,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAC;EAClC,EAAE,IAAI,QAAQ,EAAE;EAChB,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK;EAC7B,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC;EACjB,KAAK,EAAC;EACN,GAAG;EACH;;EC5CA,IAAI,iBAAiB,GAAG,KAAK,CAAC,UAAS;AACvC;EACO,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAC;AAC1D;EACA,IAAI,OAAO,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAC;AAC9E;EACA,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;EAC5B,EAAE,YAAY,CAAC,MAAM,CAAC,GAAG,UAAU,GAAG,IAAI,EAAE;EAC5C;EACA;EACA;AACA;EACA;EACA,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,EAAC;EACjD;EACA,IAAI,IAAI,QAAQ,GAAG,GAAE;EACrB,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,OAAM;EACxB,IAAI,QAAQ,MAAM;EAClB,MAAM,KAAK,QAAQ;EACnB,QAAQ,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC;EAChC,QAAQ,KAAK;EACb,MAAM,KAAK,MAAM,CAAC;EAClB,MAAM,KAAK,SAAS;EACpB,QAAQ,QAAQ,GAAG,KAAI;EACvB,QAAQ,KAAK;EACb,KAAK;EACL;EACA,IAAI,IAAI,QAAQ,EAAE;EAClB,MAAM,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAC;EAC/B,KAAK;EACL,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,GAAE;EACnB,IAAG;EACH,CAAC,EAAC;AACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;ECtCA;EACA;EACA,MAAM,QAAQ,CAAC;EACf,EAAE,WAAW,CAAC,KAAK,EAAE;EACrB;EACA;AACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,GAAE;EACxB,IAAI,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE;EAC3C,MAAM,KAAK,EAAE,IAAI;EACjB,MAAM,UAAU,EAAE,KAAK;EACvB,KAAK,EAAC;AACN;EACA,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;EACxB;EACA,MAAM,KAAK,CAAC,SAAS,GAAG,aAAY;EACpC,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAC;AAC9B;EACA;EACA,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAC;EACtB,KAAK;EACL,GAAG;EACH,EAAE,YAAY,CAAC,IAAI,EAAE;EACrB;EACA,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;EAC3B;EACA,MAAM,OAAO,CAAC,IAAI,EAAC;EACnB,KAAK,EAAC;EACN,GAAG;EACH,EAAE,IAAI,CAAC,IAAI,EAAE;EACb,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;EACvC;EACA,MAAM,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAC;EAC1C,KAAK,EAAC;EACN,GAAG;EACH,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;AACA;EACA,SAAS,WAAW,CAAC,KAAK,EAAE;EAC5B;EACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,EAAC;EAC1B,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,GAAE;EACjD,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;EAChC,MAAM,WAAW,CAAC,OAAO,EAAC;EAC1B,KAAK;EACL,GAAG;EACH,CAAC;AACD;EACA,SAAS,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;EACzC,EAAE,IAAI,OAAO,GAAG,OAAO,CAAC,KAAK,EAAC;EAC9B;EACA;AACA;EACA;EACA,EAAE,IAAI,GAAG,GAAG,IAAI,GAAG,GAAE;EACrB,EAAE,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;EAClC,IAAI,GAAG,GAAG;EACV;EACA,MAAM,IAAI,GAAG,CAAC,MAAM,EAAE;EACtB,QAAQ,GAAG,CAAC,MAAM,GAAE;EACpB,QAAQ,IAAI,OAAO,EAAE;EACrB;EACA,UAAU,OAAO,CAAC,GAAG,CAAC,MAAM,GAAE;EAC9B,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;EACpC;EACA,YAAY,WAAW,CAAC,KAAK,EAAC;EAC9B,WAAW;EACX,SAAS;EACT,OAAO;AACP;EACA,MAAM,OAAO,KAAK;EAClB,KAAK;EACL;EACA,IAAI,GAAG,CAAC,QAAQ,EAAE;EAClB;EACA,MAAM,IAAI,QAAQ,KAAK,KAAK,EAAE,MAAM;EACpC,MAAM,OAAO,CAAC,QAAQ,EAAC;EACvB;EACA,MAAM,KAAK,GAAG,SAAQ;EACtB,MAAM,GAAG,CAAC,MAAM,GAAE;EAClB,KAAK;EACL,GAAG,EAAC;EACJ,CAAC;AACD;EACO,SAAS,OAAO,CAAC,KAAK,EAAE;EAC/B;EACA,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,MAAM;AAC9B;EACA,EAAE,IAAI,KAAK,CAAC,MAAM,EAAE,MAAM;AAC1B;EACA;EACA;EACA,EAAE,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC;EAC5B,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA;EACA;;EC7GO,SAAS,SAAS,CAAC,EAAE,EAAE;EAC9B,EAAE,MAAM,IAAI,GAAG,EAAE,CAAC,SAAQ;EAC1B,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;EACjB,IAAI,QAAQ,CAAC,EAAE,EAAC;EAChB,GAAG;EACH,CAAC;AACD;EACA,SAAS,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE;EAChC;EACA,EAAE,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE;EACjC,IAAI,GAAG,GAAG;EACV,MAAM,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;EAC5B,KAAK;EACL,IAAI,GAAG,CAAC,QAAQ,EAAE;EAClB,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,SAAQ;EAChC,KAAK;EACL,GAAG,EAAC;EACJ,CAAC;AACD;EACA,SAAS,QAAQ,CAAC,EAAE,EAAE;EACtB,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAI;EAC7B;EACA,EAAE,IAAI,GAAG,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,KAAI;EAC3D;EACA,EAAE,OAAO,CAAC,IAAI,EAAC;AACf;EACA,EAAE,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;EACxB;EACA,IAAI,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,OAAO,EAAC;EAC3B,GAAG;EACH;;EC5BO,SAAS,SAAS,CAAC,GAAG,EAAE;EAC/B;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,OAAO,EAAE;EAC3C,IAAI,MAAM,EAAE,GAAG,KAAI;EACnB;EACA;EACA,IAAI,EAAE,CAAC,QAAQ,GAAG,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAC;EAC/D;EACA;EACA,IAAI,SAAS,CAAC,EAAE,EAAC;EACjB,IAAI,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE;EACxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAC;EAC/B,KAAK;EACL,IAAG;EACH,EAAE,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,EAAE,EAAE;EACvC,IAAI,MAAM,EAAE,GAAG,KAAI;EACnB,IAAI,MAAM,IAAI,GAAG,EAAE,CAAC,SAAQ;EAC5B,IAAI,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,EAAE,EAAC;EACnC,IAAI,EAAE,CAAC,GAAG,GAAG,GAAE;AACf;EACA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;EACtB;EACA,MAAM,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAQ;EAClC,MAAM,IAAI,CAAC,QAAQ,EAAE;EACrB,QAAQ,QAAQ,GAAG,EAAE,CAAC,UAAS;EAC/B,OAAO;EACP,MAAM,IAAI,MAAM,GAAG,iBAAiB,CAAC,QAAQ,EAAC;EAC9C,MAAM,IAAI,CAAC,MAAM,GAAG,OAAM;EAC1B,KAAK;EACL,IAAI,cAAc,CAAC,EAAE,EAAC;EACtB,IAAG;EACH,EAAE,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,SAAQ;EACpC;;EC1CO,SAAS,WAAW,CAAC,GAAG,EAAE;EACjC;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,YAAY;EACjC,IAAI,MAAM,EAAE,GAAG,KAAI;EACnB,IAAI,OAAO,aAAa,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC;EAC1C,IAAG;EACH;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,IAAI,EAAE;EACrC,IAAI,MAAM,EAAE,GAAG,KAAI;EACnB,IAAI,OAAO,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC;EAC/B,IAAG;EACH;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,GAAG,EAAE;EACpC,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;EACvB,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;EAChC,KAAK,MAAM;EACX,MAAM,OAAO,GAAG;EAChB,KAAK;EACL,IAAG;EACH,EAAE,GAAG,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;EACtC,IAAI,MAAM,EAAE,GAAG,KAAI;EACnB,IAAI,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,SAAQ;EAChC,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,EAAC;EAC/B,IAAI,OAAO,KAAK;EAChB,IAAG;EACH;;ECtBA;EACA,SAAS,GAAG,CAAC,OAAO,EAAE;EACtB;EACA,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAC;EACrB,CAAC;EACD,SAAS,CAAC,GAAG,EAAC;EACd,WAAW,CAAC,GAAG,EAAC;EAChB,cAAc,CAAC,GAAG,EAAC;EACnB,aAAa,CAAC,GAAG,EAAC;AA8ClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;AACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;;;;;;;;"}